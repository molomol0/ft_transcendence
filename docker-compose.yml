services:
  db-auth:
    image: postgres:17
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - db-service/:/app
    # entrypoint: ["/app/docker/entrypoint_db.sh"]
    networks:
      - my_network
  
  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      - my_network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./auth-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - auth-service/.env
    networks:
      my_network:
        aliases:
          - auth
    depends_on:
      - db-auth

  # media-service:
  #   build:
  #     context: ./media-service
  #     dockerfile: docker/Dockerfile
  #   ports:
  #     - "8001:8001"
  #   volumes:
  #     - ./media-service:/app
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #   env_file:
  #     - media-service/.env
  #   networks:
  #     - my_network

  chat-service:
    build:
      context: ./chat-service
      dockerfile: docker/Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./chat-service:/app
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - chat-service/.env
    networks:
      - my_network
    depends_on:
      - redis

networks:
  my_network:

volumes:
  postgres_data:
